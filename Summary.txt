Traffic Sign Detection using CNN:
-> With numpy, keras, pandas and OpenCV in Google Colab extracted labels and 
features from traffic sign image datasets from local repository to train 
the model

-> Used pandas to extract data from a csv file and use it as a placeholder
to form a grid of images that belongs to each class ( a total of 43 classes)

-> Preprocessed image using OpenCV to extract the edges and shape in the image
to better train the model, by performing Histogram Equalization on the grayscaled
image.

-> Augmented the data by performing image transformations (width, height shift etc) 
using image generator to derive a better model that can handle all types of data

-> Fine-tuned the model by experimenting with the number of convolution layers, droputs
 and other parameters to increase the accuracy and as well avoid overfitting 

-> Compiled the overall LeNet model using Adam and trained the model that yielded a training
accuracy of 96% and validation accuracy of 98% successfully predicting 
the classes with the test data.




Self driving car simulator using behavioral cloning:
-> Use the Udacity car simulator to capture the steering angle and lanes
from the track

-> Preprocess the datasets that contains the steering angles pertaining to
the center, left and right planes of images captured by the camera placed
in the corresponding positions of the car, by keeping a threshold over the dataset.

-> Perform image processing transforms like Gaussian Blur and Color Space conversion ( RGB to YUV) using OpenCV on 
the images of the tracks logged from the simulator, based on the specs of the NVIDIA model

->